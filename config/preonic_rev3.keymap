/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEFAULT 0
#define LOWER   1
#define RAISE   2
#define MOVE    3

&sk {
	// don't release mods on other mods presses
	ignore-modifiers;
};

/ {
    behaviors {
		// Enables holding the first mod-tap key
		// by performing a tap-release-hold sequence.
		// To use it: "&qt KEYCODE1 KEYCODE2"
		qt: quick_tap {
			compatible = "zmk,behavior-hold-tap";
			label = "QUICK_TAP";
			#binding-cells = <2>;
			flavor = "hold-preferred";
			tapping-term-ms = <190>;
			quick-tap-ms = <185>;
			bindings = <&kp>, <&kp>;
		};
        gqt: global-quick-tap {
            compatible = "zmk,behavior-hold-tap";
            label = "GLOBAL_QUICK_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>;
            quick-tap-ms = <175>;
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        };
	};
    combos {
        compatible = "zmk,combos";

        combo_cmd_mac{
			timeout-ms = <200>;
			key-positions = <32 33>;
			bindings = <&kp LGUI>;
            require-prior-idle-ms = <200>;
			layers = <DEFAULT>;
		};

        combo_ctrl_shift {
			timeout-ms = <200>;
			key-positions = <27 28>;
			bindings = <&kp LC(SPACE)>;
            require-prior-idle-ms = <200>;
			layers = <DEFAULT>;
		};
    };
    chosen { zmk,matrix_transform = &layout_grid_transform; };
    keymap {
        compatible = "zmk,keymap";
        default_layer {
            //  -------------------------------------------------------------------------------------------------
            // |  GRAV |  1   |  2   |  3   |  4    |  5     |   6     |  7     |  8   |  9    |   0   | BSPC   |
            // |  TAB  |  Q   |  W   |  F   |  P    |  G     |   J     |  L     |  U   |  Y    |   :   | DEL    |
            // |  ESC  |  A   |  R   |  S   |  T    |  D     |   H     |  N     |  E   |  I    |   O   |  '     |
            // | SHIFT |  Z   |  X   |  C   |  V    |  B     |   K     |  M     |  ,   |  .    |   /   | RET    |
            // |       | LGUI | LALT | LCTL | LOWER | SPACE  |  SPACE  |  RAISE | LEFT |  DOWN |   UP  | RIGHT  |
            bindings = <
                &kp GRAVE      &kp N1     &kp N2    &kp N3    &kp N4        &kp N5          &kp N6     &kp N7         &kp N8      &kp N9    &kp N0     &kp BSPC
                &kp TAB        &kp Q      &kp W     &kp F     &kp P         &kp G           &kp J      &kp L          &kp U       &kp Y     &kp SEMI   &kp DEL
                &mt LCTRL ESC  &kp A      &kp R     &kp S     &lt LOWER T   &kp D           &kp H      &lt RAISE N    &lt MOVE E  &kp I     &kp O      &mt RCTRL SQT
                &kp LSHIFT     &kp Z      &kp X     &kp C     &kp V         &kp B           &kp K      &kp M          &kp COMMA   &kp DOT   &kp SLASH  &mt RSHIFT RET
                &none          &kp LCTRL  &kp LALT  &kp LGUI  &kp ESC       &gqt LOWER BSPC  &kp SPACE  &mt LGUI TAB   &kp LEFT    &kp DOWN  &kp UP     &kp RIGHT
                >;
        };
        lower {
            // ------------------------------------------------------------------------------------------
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |   *  |  (   |   )   | BSPC  |
            // |   ~   |  !   |  @   |  #   |  $   |  %   |   ^   |   &   |   *  |  (   |   )   | DEL   |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5  |  F6   |   -   |   +  |  [   |   ]   |  |    |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11 |  F12  |       | LCTL | HOME |  END  |       |
            // | LALT  |      |      |      |      |      |       |       | NEXT | VOL- | VOL+  | PLAY  |
            bindings = <
                &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &kp LS(N6)      &kp LS(N7)      &kp LS(N8)   &kp LS(N9)     &kp LS(N0)    &kp BSPC
                &kp LS(GRAVE)  &kp LS(N1)  &kp LS(N2)  &kp LS(N3)  &kp LS(N4)  &kp LS(N5)  &none           &kp UNDERSCORE  &kp PIPE     &kp SQT        &none        &kp DEL
                &kp DEL        &kp CARET   &kp STAR    &kp AMPS    &none       &none       &kp HASH        &kp MINUS       &kp SLASH    &kp DQT        &kp DOLLAR    &kp BSLH
                &none          &kp F7      &kp F8      &kp F9      &kp F10     &kp F11     &kp F12         &kp TILDE       &kp BSLH     &kp GRAVE      &none         &none
                &kp LALT       &none       &none       &none       &trans      &none       &kp RET         &none           &kp C_NEXT   &kp C_VOL_UP   &kp C_VOL_UP  &kp C_PLAY
                >;
        };
        raise {
            // -------------------------------------------------------------------------------------------
            // |   `   |  1   |  2   |  3   |  4   |   5   |   6   |   7   |   8  |  9   |   0   | BSPC  |
            // |   `   |  1   |  2   |  3   |  4   |   5   |   6   |   _   |   8  |  9   |   0   | DEL   |
            // |  DEL  |  F1  |  F2  |  F3  |  F4  |  F5   |  F6   |   -   |     |  [   |   ]   |  \    |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11  |  F12  |   ~   |   \  | PGUP |  PGDN |       |
            // |       |      |      |      |      | SHIFT |       |       | NEXT | VOL- |  VOL+ | PLAY  |
            bindings = <
                &kp GRAVE  &kp N1     &kp N2    &kp N3   &kp N4   &kp N5 &kp N6  &kp N7  &kp N8      &kp N9        &kp N0        &kp BSPC
                &kp GRAVE  &kp COLON  &kp LT 	&kp GT   &kp SEMI &none  &none   &none   &none       &none         &none         &kp DEL
                &kp DEL    &kp LBRC   &kp RBRC 	&kp LPAR &kp RPAR &kp AT &none   &none   &kp EQUAL   &kp PLUS      &kp PERCENT   &kp BSLH
                &none      &none 	  &kp EXCL 	&kp LBKT &kp RBKT &none  &none   &none   &none  	 &none  	   &none         &none
                &none      &none      &none     &none    &none    &none  &none   &trans  &kp C_NEXT  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PLAY
                >;
        };
        move {
            // -------------------------------------------------------------------------------------------
            // |   `   |  1   |  2   |  3   |  4   |   5   |   6   |   7   |   8  |  9   |   0   | BSPC  |
            // |   `   |  1   |  2   |  3   |  4   |   5   |   6   |   7   |   8  |  9   |   0   | DEL   |
            // |  DEL  | left |  F2  |  F3  |  F4  |  F5   |  F6   |   -   |   =  |  [   |   ]   |  \    |
            // |       |  F7  |  F8  |  F9  |  F10 |  F11  |  F12  |   #   |   \  | PGUP |  PGDN |       |
            // |       |      |      |      |      | SHIFT |       |       | NEXT | VOL- |  VOL+ | PLAY  |
            bindings = <
                &none  &kp N1    &kp N2    &kp N3     &kp N4      &kp N5   &kp N6   &kp N7      &kp N8        &kp N9            &kp N0             &kp BSPC
                &none  &none     &none     &kp PG_UP  &none       &none    &kp N6   &kp N7      &kp N8        &kp N9            &kp N0             &kp DEL
                &none  &kp LEFT  &kp DOWN  &kp UP     &kp RIGHT   &none    &none    &none       &none         &none             &none              &kp BSLH
                &none  &none     &kp HOME  &kp PG_DN  &kp END     &none    &kp F12  &kp HASH    &kp BSLH      &kp PG_UP         &kp PG_DN          &none
                &none  &kp LCTRL &kp LALT  &kp LGUI   &none       &none    &none    &none       &kp C_NEXT    &kp C_VOL_DN      &kp C_VOL_UP       &kp C_PLAY
                >;
        };
    };
};
